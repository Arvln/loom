services:
  web:
    build:
      context: .
      dockerfile: ./packages/frontend/Dockerfile.dev
    container_name: web
    volumes:
      - ./packages/frontend:/usr/src/packages/frontend:cached
      - ./packages/ui:/usr/src/packages/ui
      - ./packages/utils:/usr/src/packages/utils
      - /usr/src/packages/frontend/node_modules
      - /usr/src/packages/frontend/.next
      - /usr/src/packages/ui/node_modules
    restart: always
    networks:
      - web-network
  admin-web:
    build:
      context: .
      dockerfile: ./packages/admin-frontend/Dockerfile.dev
    container_name: admin-web
    volumes:
      - ./packages/admin-frontend:/usr/src/packages/admin-frontend:cached
      - ./packages/ui:/usr/src/packages/ui
      - ./packages/utils:/usr/src/packages/utils
      - /usr/src/packages/admin-frontend/node_modules
      - /usr/src/packages/ui/node_modules
    restart: always
    networks:
      - web-network

  app:
    build:
      context: ./packages/backend
      dockerfile: Dockerfile.dev
    container_name: app
    depends_on:
      - db
    restart: always
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: loom
      DB_PASSWORD: Passw0rd
      DB_NAME: loom
    volumes:
      - ./packages/backend:/app
    networks:
      - app-network

  db:
    image: postgres:17.6-alpine3.22
    container_name: db
    environment:
      POSTGRES_USER: loom
      POSTGRES_PASSWORD: Passw0rd
      POSTGRES_DB: loom
    ports:
      - '5432:5432'
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - app-network

  nginx:
    build:
      context: .
      dockerfile: ./nginx/Dockerfile.dev
    container_name: nginx
    ports:
      - 80:80
    volumes:
      - ./nginx/common:/etc/nginx/common
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - web
      - admin-web
      - app
    restart: always
    networks:
      - web-network
      - app-network

volumes:
  db_data:

networks:
  web-network:
    driver: bridge
  app-network:
    driver: bridge
